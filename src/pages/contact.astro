---
import Layout from '~/layouts/PageLayout.astro';
import { Icon } from 'astro-icon/components';

const metadata = {
  title: 'Contact Us | Edvance AI',
};

const contactMethods = [
  {
    title: 'Call Us',
    description: '+1 (240) 425-9549',
    icon: 'tabler:phone',
  },
  {
    title: 'Follow Us',
    description: '@edvanceai',
    icon: 'tabler:brand-instagram',
  },
  {
    title: 'Email Us',
    description: 'team@edvanceai.org',
    icon: 'tabler:mail',
  },
];
---

<Layout metadata={metadata}>
  <!-- Hero Section -->
  <section class="py-16 md:py-24 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-6 dark:text-white">Get In Touch</h1>
        <p class="text-lg text-gray-600 dark:text-gray-300">
          Ready to start your digital journey? We're here to help bring your vision to life.
        </p>
      </div>
    </div>
  </section>

  <!-- Contact Section -->
  <section class="py-16 md:py-24">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto grid md:grid-cols-2 gap-12">
        <!-- Contact Methods -->
        <div class="space-y-8">
          <div>
            <h2 class="text-2xl font-bold mb-6 dark:text-white">Connect With Us</h2>
            <p class="text-gray-600 dark:text-gray-300 mb-8">
              Have questions or ready to discuss your project? Reach out through any of these channels and we'll get back to you promptly.
            </p>
          </div>
          
          <div class="space-y-6">
            {contactMethods.map((method) => (
              <div class="flex items-center p-6 bg-gray-50 dark:bg-gray-800 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
                <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mr-6">
                  <Icon name={method.icon} class="w-6 h-6 text-primary" />
                </div>
                <div>
                  <h3 class="text-lg font-semibold mb-1 dark:text-white">{method.title}</h3>
                  <p class="text-gray-600 dark:text-gray-300">{method.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- Contact Form -->
        <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-sm p-8">
          <h2 class="text-2xl font-bold mb-6 dark:text-white">Send Us a Message</h2>
          <form 
            action="https://formspree.io/f/xjkvdvad" 
            method="POST" 
            class="space-y-6"
            id="contact-form"
          >
            <div>
              <label for="name" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Name</label>
              <input 
                type="text" 
                name="name" 
                id="name" 
                required 
                class="w-full px-4 py-3 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary focus:border-transparent transition-colors"
                placeholder="Your name"
              />
            </div>
            
            <div>
              <label for="email" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
              <input 
                type="email" 
                name="email" 
                id="email" 
                required 
                class="w-full px-4 py-3 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary focus:border-transparent transition-colors"
                placeholder="your@email.com"
              />
            </div>
            
            <div>
              <label for="message" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Message</label>
              <textarea 
                name="message" 
                id="message" 
                required 
                rows="6" 
                class="w-full px-4 py-3 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary focus:border-transparent transition-colors resize-none"
                placeholder="Tell us about your inquiry..."
              ></textarea>
            </div>
            
            <button 
              type="submit" 
              class="w-full px-8 py-4 bg-primary hover:bg-secondary text-white rounded-lg font-medium transition-colors flex items-center justify-center"
              id="submit-button"
            >
              <span>Send Message</span>
              <div class="hidden ml-3" id="loading-spinner">
                <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </div>
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('contact-form');
  const submitButton = document.getElementById('submit-button');
  const loadingSpinner = document.getElementById('loading-spinner');
  const buttonText = submitButton.querySelector('span');
  
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Disable button and show loading state
    submitButton.disabled = true;
    buttonText.textContent = 'Sending...';
    loadingSpinner.classList.remove('hidden');
    
    const formData = new FormData(form);
    
    try {
      const response = await fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      });
      
      if (response.ok) {
        // Show success message
        buttonText.textContent = 'Message Sent!';
        loadingSpinner.classList.add('hidden');
        
        // Add success styles
        submitButton.classList.remove('bg-primary', 'hover:bg-secondary');
        submitButton.classList.add('bg-green-500', 'hover:bg-green-600');
        
        // Reset form
        form.reset();
        
        // Reset button after delay
        setTimeout(() => {
          submitButton.disabled = false;
          buttonText.textContent = 'Send Message';
          submitButton.classList.add('bg-primary', 'hover:bg-secondary');
          submitButton.classList.remove('bg-green-500', 'hover:bg-green-600');
        }, 3000);
      } else {
        throw new Error('Submission failed');
      }
    } catch (error) {
      console.error('Error:', error);
      
      // Show error state
      buttonText.textContent = 'Error! Try Again';
      loadingSpinner.classList.add('hidden');
      submitButton.classList.remove('bg-primary', 'hover:bg-secondary');
      submitButton.classList.add('bg-red-500', 'hover:bg-red-600');
      
      // Reset button after delay
      setTimeout(() => {
        submitButton.disabled = false;
        buttonText.textContent = 'Send Message';
        submitButton.classList.add('bg-primary', 'hover:bg-secondary');
        submitButton.classList.remove('bg-red-500', 'hover:bg-red-600');
      }, 3000);
    }
  });
});
</script>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  section > div {
    animation: fadeInUp 0.6s ease-out forwards;
  }
</style>
